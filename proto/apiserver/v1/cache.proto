syntax = "proto3";

package proto;

// go:generate protoc -I. --go_out=plugins=grpc:$GOPATH/src cache.proto

option go_package = "github.com/opsdata/elmt-api/proto/apiserver/v1";

// Cache implements a cache rpc service.
service Cache{
	rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse) {}
}

// SecretInfo contains secret details.
message SecretInfo {
    string secret_name = 1;
    string secret_id   = 2;
    string username    = 3;
    string secret_key  = 4;
    int64  expires     = 5;
    string description = 6;
    string created_at  = 7;
    string updated_at  = 8;
}

// ListSecretsRequest defines ListSecrets request struct.
message ListSecretsRequest {
    optional int64 offset = 1;
    optional int64 limit = 2;
}

// ListSecretsResponse defines ListSecrets response struct.
message ListSecretsResponse {
    int64 total_count = 1;
    repeated  SecretInfo items = 2;
}
